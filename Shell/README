This program creates a simple shell. It supports external commands such as ls, as well as a few built-in commands. Two built-in commands were specified for the assignment: args and gcd, and one was allowed to be of the coder's choice. The custom function was chosen to be lcm, as this something often used to simplify fractions when solving equations involving fractions.  The usage of lcm is similar to gcd, it takes in integers in hex or base 10.

There were some assumptions made during the process. One assumption is that '<' or '>' for file redirection will always have at least 1 space after, to avoid accidental redirection of input/output by the user. Furthermore, the gcd function was given the ability to handle more than 2 arguments, as this still meets the specification, yet is much more useful, as finding the gcd for 2 numbers is relatively trivial compared to many numbers. One known issue is that if a command is run in the background (e.g. 'gedit &'), once the window is closed, and another command is entered, it's output will be printed after another prompt. On subsequent iterations, this bug does not occur. It was also assumed that lex warnings are to be ignored, as discussed in the lab.

To run the program, first it must be built. To do this, 'make' should be called. If an error due to 'flex' not being found arises, it must be installed first. After the program is built successfully, calling ./ish will launch the program. Commands can be issued like in a standard terminal. The terminal can be exited by using the 'exit' command.
